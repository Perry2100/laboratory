#include <iostream>
#include <vector>

std::vector<int> pack_array(const std::vector<int>& arr) {
    std::vector<int> counts(18, 0); // initialize a counter array for values 0 to 17
    for (int x : arr) {
        counts[x]++; // increment the count for each value in the array
    }
    return counts;
}

std::vector<int> unpack_array(const std::vector<int>& counts) {
    std::vector<int> arr;
    for (int i = 0; i < 18; i++) {
        for (int j = 0; j < counts[i]; j++) {
            arr.push_back(i); // add the value i to the output array counts[i] times
        }
    }
    return arr;
}

int main() {
    std::vector<int> arr = {1, 3, 5, 3, 2, 2, 2, 0, 0, 1, 1, 5, 5};
    std::vector<int> packed = pack_array(arr);
    std::vector<int> unpacked = unpack_array(packed);
    
    std::cout << "Original array: ";
    for (int x : arr) {
        std::cout << x << " ";
    }
    std::cout << std::endl;
    
    std::cout << "Packed array: ";
    for (int x : packed) {
        std::cout << x << " ";
    }
    std::cout << std::endl;
    
    std::cout << "Unpacked array: ";
    for (int x : unpacked) {
        std::cout << x << " ";
    }
    std::cout << std::endl;
    
    return 0;
}
